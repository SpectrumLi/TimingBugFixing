--- MRClientProtocolPBServiceImpl.java	2019-03-21 10:57:56.742089070 -0500
+++ ../patched-code/MRClientProtocolPBServiceImpl.java	2019-03-26 10:37:32.037484728 -0500
@@ -90,6 +90,8 @@
 import com.google.protobuf.RpcController;
 import com.google.protobuf.ServiceException;
 
+import com.uchicago.dfix.*;
+
 public class MRClientProtocolPBServiceImpl implements BlockingInterface {
 
   private MRClientProtocol real;
@@ -214,7 +216,16 @@
     KillTaskAttemptRequest request = new KillTaskAttemptRequestPBImpl(proto);
     try {
       KillTaskAttemptResponse response = null;
-      response = real.killTaskAttempt(request);
+      /*DF_ReEx_Start*/
+      while(DFix.ShouldLoop(this)){ 
+	  try{       
+	       response = real.killTaskAttempt(request); 
+	       break;
+	  }catch(Exception e_e){ 
+	       if(DFix.Timeout(this)) throw e_e;
+	  }
+      }
+      /*DF_ReEx_End*/
       return ((KillTaskAttemptResponsePBImpl)response).getProto();
     } catch (YarnRemoteException e) {
       throw new ServiceException(e);
--- MRClientService.java	2019-03-21 10:57:56.746089184 -0500
+++ ../patched-code/MRClientService.java	2019-03-26 10:28:34.902593522 -0500
@@ -93,6 +93,9 @@
 
 import org.apache.hadoop.mapred.TaskAttemptListenerImpl;
 import org.apache.hadoop.yarn.exceptions.impl.pb.YarnRemoteExceptionPBImpl;
+
+import com.uchicago.dfix.*;
+
 /**
  * This module is responsible for talking to the 
  * jobclient (user facing).
@@ -344,6 +347,7 @@
       verifyAndGetAttempt(taskAttemptId, true);
       appContext.getEventHandler().handle(new TaskAttemptDiagnosticsUpdateEvent(taskAttemptId, message));
       appContext.getEventHandler().handle(new TaskAttemptEvent(taskAttemptId, TaskAttemptEventType.TA_KILL));
+      DFix.EventWait(this);
 
       KillTaskAttemptResponse response = 
         recordFactory.newRecordInstance(KillTaskAttemptResponse.class);
--- TaskAttemptListenerImpl.java	2019-03-21 10:57:56.750089297 -0500
+++ ../patched-code/TaskAttemptListenerImpl.java	2019-03-26 10:28:52.799089554 -0500
@@ -54,6 +54,8 @@
 import org.apache.hadoop.yarn.YarnException;
 import org.apache.hadoop.yarn.service.CompositeService;
 
+import com.uchicago.dfix.*;
+
 /**
  * This class is responsible for talking to the task umblical.
  * It also converts all the old data structures
@@ -417,6 +419,7 @@
     WrappedJvmID wJvmID = new WrappedJvmID(jvmId.getJobId(), jvmId.isMap,
         jvmId.getId());
     org.apache.hadoop.mapred.Task task = jvmIDToAttemptMap.get(wJvmID);
+    DFix.Signal(jvmIDToAttemptMap,wJvmID);
     if (task != null) { //there may be lag in the attempt getting added here
       LOG.info("JVM with ID: " + jvmId + " given task: " + task.getTaskID());
       JvmTask jvmTask = new JvmTask(task, false);
