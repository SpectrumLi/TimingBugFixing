--- AssignmentManager.java	2019-03-21 15:01:53.141755413 -0500
+++ ../patched-code/AssignmentManager.java	2019-03-26 11:39:44.808626634 -0500
@@ -95,6 +95,8 @@
 import com.google.common.base.Preconditions;
 import com.google.common.collect.LinkedHashMultimap;
 
+import com.uchicago.DFix.*;
+
 /**
  * Manages and performs region assignment.
  * <p>
@@ -561,6 +563,7 @@
       //break;
       //}
       this.regionStates.waitForUpdate(100);
+      if (DFix.DF_CHECK()) DFix.FastFwd();
       LOG.info("********************waitForMeta in infinite while loop **********************");
     } 
     //  if (s_flag == 0 ) break;
--- OpenRegionHandler.java	2019-03-21 15:01:53.137755295 -0500
+++ ../patched-code/OpenRegionHandler.java	2019-03-26 11:51:04.240405302 -0500
@@ -38,6 +38,9 @@
 import org.apache.hadoop.hbase.zookeeper.ZKAssign;
 import org.apache.hadoop.hbase.zookeeper.ZKUtil;
 import org.apache.zookeeper.KeeperException;
+
+import com.uchicago.DFix.*;
+
 /**
  * Handles opening of a region on a region server.
  * <p>
@@ -168,7 +171,8 @@
         region.setRecovering(true);
         recoveringRegions.put(region.getRegionInfo().getEncodedName(), region);
       }
-
+      DFix.PreComputeTask();
+      DFix.DF_FF_Start(region);
       boolean failed = true;
       if (tickleOpening("post_region_open")) {
         if (updateMeta(region)) {
@@ -177,6 +181,7 @@
       }
       if (failed || this.server.isStopped() ||
           this.rsServices.isStopping()) {
+        DFix.DF_FF_End(region);
         return;
       }      
       
@@ -220,15 +225,16 @@
           }
       } catch (Exception e) { LOG.info("Exception while reading crash flag ", e); }
 */
-
       if (!isRegionStillOpening() || !transitionToOpened(region)) {
         // If we fail to transition to opened, it's because of one of two cases:
         //    (a) we lost our ZK lease
         // OR (b) someone else opened the region before us
         // OR (c) someone cancelled the open
         // In all cases, we try to transition to failed_open to be safe.
+	DFix.DF_FF_End(region);
         return;
       }
+      DFix.DF_FF_End(region);
       LOG.info("HHHHH RS Transfer Meta successfully");
       
       // We have a znode in the opened state now. We can't really delete it as the master job.
