--- AntiEntropyService.java	2019-03-21 15:00:07.258630779 -0500
+++ ../patched-code/AntiEntropyService.java	2019-03-31 14:37:16.150359704 -0500
@@ -54,6 +54,8 @@
 import org.apache.cassandra.streaming.*;
 import org.apache.cassandra.utils.*;
 
+import com.uchicago.DFix.*;
+
 /**
  * AntiEntropyService encapsulates "validating" (hashing) individual column families,
  * exchanging MerkleTrees with remote nodes via a TreeRequest/Response conversation,
@@ -244,7 +246,10 @@
             if (!validator.request.endpoint.equals(FBUtilities.getBroadcastAddress()))
                 logger.info(String.format("[repair #%s] Sending completed merkle tree to %s for %s", validator.request.sessionid, validator.request.endpoint, validator.request.cf));
             p1 = message; p2 = validator.request.endpoint;
+	    DFix.PreComputeTask();
+	    DFix.DF_FF_Start(message, validator.request.endpoint);
             ms.sendOneWay(message, validator.request.endpoint);
+	    DFix.DF_FF_End(message, validator.request.endpoint);
         }
         catch (Exception e)
         {
@@ -721,7 +726,10 @@
                 // block whatever thread started this session until all requests have been returned:
                 // if this thread dies, the session will still complete in the background
                 logger.info("GGGGGGG enter waitsite Anti-721");
-                completed.await();
+		while(DFix.DF_CHECK(completed)){
+                completed.await(DFix.TIME_PERIOD);
+		if(!DFix.DF_CHECK(completed)) DFix.FastFwd();
+		}
                 logger.info("GGGGGGG exit waitsite Anti-722");
                 if (exception == null)
                 {
