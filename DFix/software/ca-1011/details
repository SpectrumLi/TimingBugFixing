--------  PATCH DETAILS  --------

In the BootStrapper.java

---              tokenString = ss.getBootstrapToken().toString();
+++             if (DFix.CheckCallStack()) tokenString = DFix_CheckRollback(); else             tokenString = ss.getBootstrapToken().toString();

In the StorageService.java

---          calculatePendingRanges(1);
+++          calculatePendingRanges(1); DFix.Set(this);


---              token = BootStrapper.getBootstrapToken(tokenMetadata_, StorageLoadBalancer.instance.getLoadInfo());
+++             if (DFix.RollCallStack()){     token = DFix_RollDestination();}else             token = BootStrapper.getBootstrapToken(tokenMetadata_, StorageLoadBalancer.instance.getLoadInfo());


--------  IMPL  DETAILS  --------

In the BootStrapper.java

DFix_CheckRollback():
try { 
if ( DFix.Wait(this) ) 
            tokenString = ss.getBootstrapToken().toString();
else tokenString ="00000000000000000000000";
} catch (InterruptedException e_dfix) {
}
 return tokenString;


In the StorageService.java

DFix_RollDestination():
 int i = 0;
   while (true) {
 if (i>100) break; 
 i++;
            token = BootStrapper.getBootstrapToken(tokenMetadata_, StorageLoadBalancer.instance.getLoadInfo());
if (!token.toString().equals("0"))
break;}
return token;


